[Unit]
Description=Gunicorn instance to serve ddmail_email_remover
After=network.target
StartLimitIntervalSec=300
StartLimitBurst=5

[Service]
Environment="MODE=PRODUCTION"
User={{ ddmail_email_remover_runas_user }}
Group={{ ddmail_email_remover_runas_group }}
WorkingDirectory=/opt/ddmail_email_remover/
Environment="PATH=/opt/ddmail_email_remover/venv/bin/"
ExecStart=/opt/ddmail_email_remover/venv/bin/gunicorn -b 127.0.0.1:8001 --log-file /var/log/gunicorn/ddmail_email_remover.log --workers 2 "ddmail_email_remover:create_app(config_file = \"/opt/ddmail_email_remover/config/config.toml\")" 
RuntimeDirectory=ddmail_email_remover
Restart=on-failure
RestartSec=10s

# Prevent acquiring new privileges. Warning: breaks execution of SUID binaries
#NoNewPrivileges=yes

# Use dedicated /tmp
#PrivateTmp=yes

# Hide user homes
#ProtectHome=yes

# Service may not create SUID/SGID files
#RestrictSUIDSGID=yes

# Service may not create writable and executable memory mappings
#MemoryDenyWriteExecute=yes

# Service may only use loopback network interface
#PrivateNetwork=yes

# Create a filesystem jail with namespace
#TemporaryFileSystem=/:ro
#BindReadOnlyPaths=/opt/ddmail_email_remover_venv /usr/bin/ls /usr/bin/python3.11 /usr/bin/python3 /lib/x86_64-linux-gnu /lib64 /usr/lib/python3.11
#BindPaths=/var/log/gunicorn/ddmail_email_remover.log /var/mail

# Deny all CAP
#CapabilityBoundingSet=
#AmbientCapabilities=

# System call filter
#SystemCallFilter=@system-service

# Only allow network traffic on loopback.
IPAddressDeny=any
IPAddressAllow=127.0.0.0/8

[Install]
WantedBy=multi-user.target

