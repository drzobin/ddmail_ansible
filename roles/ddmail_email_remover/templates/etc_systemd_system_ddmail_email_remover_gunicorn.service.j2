[Unit]
Description=Gunicorn instance to serve ddmail_email_remover
After=network.target

[Service]
Environment="MODE=PRODUCTION"
User={{ ddmail_email_remover_gunicorn_user }}
Group={{ ddmail_email_remover_gunicorn_group }}
WorkingDirectory=/opt/ddmail_email_remover_venv/
Environment="PATH=/opt/ddmail_email_remover_venv/bin/"
ExecStart=/opt/ddmail_email_remover_venv/bin/gunicorn -b 127.0.0.1:8001 --log-file /var/log/gunicorn/ddmail_email_remover.log --workers 2 "email_remover:create_app()" 
RuntimeDirectory=ddmail_email_remover

# Prevent acquiring new privileges. Warning: breaks execution of SUID binaries
NoNewPrivileges=yes

# Use dedicated /tmp
PrivateTmp=yes

# Hide user homes
ProtectHome=yes

# Service may not create SUID/SGID files
RestrictSUIDSGID=yes

# Service may not create writable and executable memory mappings
MemoryDenyWriteExecute=yes

# Service may only use loopback network interface
#PrivateNetwork=yes

# Create a filesystem jail with namespace
TemporaryFileSystem=/:ro
BindReadOnlyPaths=/opt/ddmail_email_remover_venv /usr/bin/ls /usr/bin/python3.11 /usr/bin/python3 /lib/x86_64-linux-gnu /lib64 /usr/lib/python3.11
BindPaths=/var/log/gunicorn/ddmail_email_remover.log /var/mail/vhosts

# Deny all CAP
CapabilityBoundingSet=
AmbientCapabilities=

# System call filter
SystemCallFilter=@system-service

[Install]
WantedBy=multi-user.target

