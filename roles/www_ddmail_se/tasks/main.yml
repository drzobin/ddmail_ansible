---
- name: Install packages needed for web application ddmail
  ansible.builtin.apt:
    pkg:
      - python3-pip
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-dev
      - python3-venv
      - default-libmysqlclient-dev
    state: latest

- name: Stat /opt/ddmail_venv folder
  ansible.builtin.stat:
    path: /opt/ddmail_venv
  register: ddmail_venv

- name: Move /opt/ddmail_venv folder
  ansible.builtin.command: mv /opt/ddmail_venv /opt/ddmail_venv_{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
  when: ddmail_venv.stat.exists

- name: Create dmail python env.
  ansible.builtin.command: python3 -m venv /opt/ddmail_venv

- name: Add the group "{{ www_ddmail_se_gunicorn_group }}"
  ansible.builtin.group:
    name: "{{ www_ddmail_se_gunicorn_group }}"
    state: present
  when: env == "prod"

- name: Add the user "{{ www_ddmail_se_gunicorn_user }}"
  ansible.builtin.user:
    name: "{{ www_ddmail_se_gunicorn_user }}"
    shell: /usr/sbin/nologin
    home: /opt/ddmail_venv
    create_home: false
    group: "{{ www_ddmail_se_gunicorn_group }}"
    state: present
  when: env == "prod"

- name: Clone ddmail_webapp repo with separate git directory
  ansible.builtin.git:
    repo: https://github.com/drzobin/ddmail_webapp.git
    dest: /opt/ddmail_venv/ddmail_webapp

- name: Stat ddmail_webapp folder
  ansible.builtin.stat:
    path: /opt/ddmail_venv/ddmail_webapp
  register: ddmail_webapp

- name: Move ddmail from ddmail_webapp
  ansible.builtin.command: mv /opt/ddmail_venv/ddmail_webapp/ddmail /opt/ddmail_venv/
  # when: ddmail_webapp.stat.exists
  when:
    - ddmail_webapp.stat.exists
    - env == "prod"

- name: Remove ddmail_webapp folder
  ansible.builtin.command: rm -rf /opt/ddmail_venv/ddmail_webapp
  # when: ddmail_webapp.stat.exists
  when:
    - ddmail_webapp.stat.exists
    - env == "prod"

- name: Install requirenments with pip.
  ansible.builtin.pip:
    requirements: /opt/ddmail_venv/ddmail/requirements.txt
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Set user and group ownership of /opt/ddmail_venv
  ansible.builtin.file:
    state: directory
    recurse: true
    owner: "{{ www_ddmail_se_venv_user_owner }}"
    group: "{{ www_ddmail_se_venv_group_owner }}"
    path: /opt/ddmail_venv

- name: Create/edit ddmail webapp config file /opt/ddmail_venv/ddmail/config.py
  ansible.builtin.template:
    src: config.py.j2
    dest: /opt/ddmail_venv/ddmail/config.py
    owner: '{{ www_ddmail_se_gunicorn_user }}'
    group: '{{ www_ddmail_se_gunicorn_group }}'
    mode: "u=rw,g=r,o="
  when: env == "prod"

- name: Create/edit ddmail webapp config file /opt/ddmail_venv/ddmail_webapp/ddmail/config.py
  ansible.builtin.template:
    src: config.py.j2
    dest: /opt/ddmail_venv/ddmail_webapp/ddmail/config.py
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "dev"

- name: Install ddmail webapp with pip
  ansible.builtin.pip:
    name: /opt/ddmail_venv/ddmail
    extra_args: -e
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv
  when: env == "prod"

- name: Create/edit ddmail gunicorne service configuration file /etc/systemd/system/ddmail_gunicorn.service
  ansible.builtin.template:
    src: ddmail_gunicorn.service.j2
    dest: /etc/systemd/system/ddmail_gunicorn.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Add logdir for gunicorn.
  ansible.builtin.file:
    path: /var/log/gunicorn
    state: directory
    owner: '{{ www_ddmail_se_gunicorn_user }}'
    group: '{{ www_ddmail_se_gunicorn_group }}'
    mode: "u=rwx,g=rx,o=rx"
  when: env == "prod"

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart ddmail_gunicorn service
  ansible.builtin.service:
    name: ddmail_gunicorn
    state: restarted
    enabled: true
  when: env == "prod"
