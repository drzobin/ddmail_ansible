---
- name: Install packages needed for web application ddmail
  apt:
    pkg:
      - python3-pip
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-dev
      - python3-venv
      - default-libmysqlclient-dev
      - apache2
      - certbot
      - python3-certbot-apache
    state: latest

- name: Enable apache2 mod proxy
  ansible.builtin.command: /usr/sbin/a2enmod proxy

- name: Enable apache2 mod proxy_http
  ansible.builtin.command: /usr/sbin/a2enmod proxy_http

- name: Enable apache2 mod ssl
  ansible.builtin.command: /usr/sbin/a2enmod ssl

- name: Create/edit apache2 config file /etc/apache2/sites-available/000-default.conf 
  template: src=000-default.conf.j2 dest=/etc/apache2/sites-available/000-default.conf

- name: stat cerbot registration lockfile
  stat: path=/etc/letsencrypt/.registered
  register: certbot_reg_lockfile

- name: Stop apache2 service
  service: name=apache2 state=stopped enabled=yes
  when: not certbot_reg_lockfile.stat.exists

- name: Register certbot
  command: certbot -n register --agree-tos --email {{ vault_certbot_reg_email }}
  when: not certbot_reg_lockfile.stat.exists

- name: Create certbot registration lockfile
  command: touch /etc/letsencrypt/.registered
  when: not certbot_reg_lockfile.stat.exists

- name: Stat cerbot apache ssl cert
  stat: path=/etc/letsencrypt/live/www.ddmail.se/fullchain.pem
  register: certbot_apache_ssl

- name: Get apache ssl certificate for www.ddmail.se
  command: /usr/bin/certbot certonly --standalone -d www.ddmail.se
  when: not certbot_apache_ssl.stat.exists

- name: Certbot renew as cronjob
  cron:
    name: certbot-renewal
    job: '/usr/bin/certbot renew --pre-hook "systemctl stop apache2" --post-hook "systemctl start apache2"'
    minute: "0"
    hour: "04"

- name: Create/edit apache2 config file /etc/apache2/sites-available/001-default-ssl.conf
  template: src=001-default-ssl.conf.j2 dest=/etc/apache2/sites-available/001-default-ssl.conf

- name: Enable apache2 site 001-default-ssl.conf
  ansible.builtin.command: /usr/sbin/a2ensite 001-default-ssl.conf

- name: Restar apache2 service
  service: name=apache2 state=restarted enabled=yes

- name: stat /opt/ddmail_venv folder
  stat: path=/opt/ddmail_venv
  register: ddmail_venv

- name: Remove /opt/ddmail_venv folder
  command: mv /opt/ddmail_venv /opt/ddmail_venv_{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
  when: ddmail_venv.stat.exists

- name: Create dmail python env.
  command: python3 -m venv /opt/ddmail_venv

- name: Install Flask with pip.
  pip:
    name: flask
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install Flask-SQLAlchemy with pip.
  pip:
    name: Flask-SQLAlchemy
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install argon2_cffi with pip.
  pip:
    name: argon2_cffi
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install Flask-Session with pip.
  pip:
    name: Flask-Session
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install Flask-WTF with pip.
  pip:
    name: Flask-WTF
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install mysqlclient with pip.
  pip:
    name: mysqlclient
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install pytest with pip.
  pip:
    name: pytest
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install coverage with pip.
  pip:
    name: coverage
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Install gunicorn with pip.
  pip:
    name: gunicorn
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Clone ddmail_webapp repo with separate git directory
  git:
    repo: https://github.com/drzobin/ddmail_webapp.git
    dest: /opt/ddmail_venv/ddmail_webapp

- name: stat ddmail_webapp folder
  stat: path=/opt/ddmail_venv/ddmail_webapp
  register: ddmail_webapp

- name: Move ddmail from ddmail_webapp
  command: mv /opt/ddmail_venv/ddmail_webapp/ddmail /opt/ddmail_venv/
  when: ddmail_webapp.stat.exists

- name: Remove ddmail_webapp folder
  command: rm -rf /opt/ddmail_venv/ddmail_webapp
  when: ddmail_webapp.stat.exists

- name: Create/edit ddmail webapp config file /opt/ddmail_venv/ddmail/config.py
  template: src=config.py.j2 dest=/opt/ddmail_venv/ddmail/config.py

- name: Install ddmail webapp with pip
  pip:
    name: /opt/ddmail_venv/ddmail
    extra_args: -e
    virtualenv_python: python3
    virtualenv: /opt/ddmail_venv

- name: Ensure group www-ddmail exists
  group:
    name: www-ddmail
    state: present

- name: Add the user www-ddmail
  ansible.builtin.user:
    name: www-ddmail
    shell: /usr/sbin/nologin
    home: /opt/ddmail_venv
    create_home: false
    group: www-ddmail
    state: present

- name: Create/edit ddmail gunicorne service configuration file /etc/systemd/system/ddmail_gunicorn.service 
  template: src=ddmail_gunicorn.service.j2 dest=/etc/systemd/system/ddmail_gunicorn.service

- name: Restar ddmail_gunicorn Service
  service: name=ddmail_gunicorn state=restarted enabled=yes
