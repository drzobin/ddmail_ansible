---
- name: Install packages needed for web application ddmail
  ansible.builtin.apt:
    pkg:
      - apache2
      - apache2-utils
      - libapache2-mod-evasive
      - libapache2-mod-security2
      - unzip
    state: latest

- name: Enable apache2 mod proxy
  ansible.builtin.command: /usr/sbin/a2enmod proxy

- name: Enable apache2 mod proxy_http
  ansible.builtin.command: /usr/sbin/a2enmod proxy_http

- name: Enable apache2 mod ssl
  ansible.builtin.command: /usr/sbin/a2enmod ssl
  when: env == "prod"

- name: Enable apache2 mod evasive
  ansible.builtin.command: /usr/sbin/a2enmod evasive
  when: env == "prod"

- name: Enable apache2 mod headers
  ansible.builtin.command: /usr/sbin/a2enmod headers

- name: Enable apache2 mod security2 (mod-security2)
  ansible.builtin.command: /usr/sbin/a2enmod security2

- name: Add privacy friendly logging in /etc/apache2/conf-available/privacy_log.conf
  ansible.builtin.template:
    src: privacy_logging.conf.j2
    dest: /etc/apache2/conf-available/privacy_logging.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Enable conf for privacy friendly logging
  ansible.builtin.command: /usr/sbin/a2enconf privacy_logging.conf

- name: Remove server information by edit /etc/apache2/conf-available/security.conf
  ansible.builtin.template:
    src: security.conf.j2
    dest: /etc/apache2/conf-available/security.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Hardening apache2 systemd unit config with namespaces and seccomp /lib/systemd/system/apache2.service
  ansible.builtin.template:
    src: systemd.service.j2
    dest: /lib/systemd/system/apache2.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Create/edit apache2 config file /etc/apache2/mods-available/evasive.conf for prod environment
  ansible.builtin.template:
    src: evasive.conf.j2
    dest: /etc/apache2/mods-available/evasive.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Create/edit apache2 config file /etc/modsecurity/modsecurity.conf
  ansible.builtin.template:
    src: modsecurity.conf.j2
    dest: /etc/modsecurity/modsecurity.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Create/edit apache2 config file /etc/apache2/mods-available/security2.conf
  ansible.builtin.template:
    src: security2.conf.j2
    dest: /etc/apache2/mods-available/security2.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Download OWASP crs rules https://github.com/coreruleset/coreruleset/archive/refs/tags/v4.0.0.zip
  ansible.builtin.get_url:
    url: https://github.com/coreruleset/coreruleset/archive/refs/tags/v4.14.0.zip
    dest: /root/v4.14.0.zip
    owner: root
    group: root
    mode: "u=rw,g=r,o="

- name: Unarchive OWASP crs rules.
  ansible.builtin.unarchive:
    src: /root/v4.14.0.zip
    dest: /root/
    remote_src: yes

- name: Delete old OWASP csr rules folder /etc/apache2/modsecurity-crs
  ansible.builtin.file:
    state: absent
    path: /etc/apache2/modsecurity-crs

- name: Move OWASP crs rules to correct location.
  command: /usr/bin/mv /root/coreruleset-4.14.0 /etc/apache2/modsecurity-crs

- name: Create/edit apache2 config file /etc/apache2/modsecurity-crs/crs-setup.conf
  ansible.builtin.template:
    src: crs-setup.conf.j2
    dest: /etc/apache2/modsecurity-crs/crs-setup.conf 
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Delete OWASP csr zip file.
  ansible.builtin.file:
    state: absent
    path: /root/v4.14.0.zip

- name: Create/edit apache2 config file /etc/apache2/sites-available/000-default.conf (prod)
  ansible.builtin.template:
    src: 000-default.conf-prod.j2
    dest: /etc/apache2/sites-available/000-default.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Create/edit apache2 config file /etc/apache2/sites-available/000-default.conf (dev)
  ansible.builtin.template:
    src: 000-default.conf-dev.j2
    dest: /etc/apache2/sites-available/000-default.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "dev"

- name: Create/edit apache2 config file /etc/apache2/sites-available/001-default-ssl.conf
  ansible.builtin.template:
    src: 001-default-ssl.conf.j2
    dest: /etc/apache2/sites-available/001-default-ssl.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Create/edit apache2 config file /etc/apache2/mods-available/ssl.conf
  ansible.builtin.template:
    src: ssl.conf.j2
    dest: /etc/apache2/mods-available/ssl.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Enable apache2 site 001-default-ssl.conf
  ansible.builtin.command: /usr/sbin/a2ensite 001-default-ssl.conf
  when: env == "prod"

- name: Create/edit apache2 config file /etc/apache2/sites-available/002-darknet.conf
  template: 
    src: 002-darknet.conf.j2 
    dest: /etc/apache2/sites-available/002-darknet.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: env == "prod"

- name: Enable apache2 site 002-darknet.conf
  ansible.builtin.command: /usr/sbin/a2ensite 002-darknet.conf
  when: env == "prod"

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart apache2 service
  ansible.builtin.service:
    name: apache2
    state: restarted
    enabled: true
