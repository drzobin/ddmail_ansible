[Unit]
Description=Service to run ddmail_openpgp_encryptor
After=network.target
StartLimitIntervalSec=300
StartLimitBurst=5

[Service]
Environment="MODE=PRODUCTION"
User={{ ddmail_openpgp_encryptor_runas_user }}
Group={{ ddmail_openpgp_encryptor_runas_group }}
WorkingDirectory=/opt/ddmail_openpgp_encryptor/
Environment="PATH=/opt/ddmail_openpgp_encryptor/venv/bin/"
ExecStart=/opt/ddmail_openpgp_encryptor/venv/bin/ddmail_openpgp_encryptor --config-file /opt/ddmail_openpgp_encryptor/config/config.ini
RuntimeDirectory=ddmail_openpgp_encryptor
Restart=on-failure
RestartSec=10s

# Prevent acquiring new privileges. Warning: breaks execution of SUID binaries
NoNewPrivileges=yes

# Use dedicated /tmp
PrivateTmp=yes

# Hide user homes
ProtectHome=yes

# Service may not create SUID/SGID files
RestrictSUIDSGID=yes

# Service may not create writable and executable memory mappings
MemoryDenyWriteExecute=yes

# Service may only use loopback network interface
#PrivateNetwork=yes

# Create a filesystem jail with namespace
TemporaryFileSystem=/:ro
BindReadOnlyPaths=/opt/ddmail_openpgp_encryptor /usr/bin/python3.11 /usr/bin/python3 /lib/x86_64-linux-gnu /lib64 /usr/lib/python3.11 /usr/bin/gpg {{ openpgp_keyrings_folder }}
BindPaths=/var/log/ddmail_openpgp_encryptor.log /dev/log /opt/ddmail_openpgp_encryptor/tmp

# Deny all CAP
CapabilityBoundingSet=
AmbientCapabilities=

# System call filter
SystemCallFilter=@system-service

# Only allow network traffic on loopback.
IPAddressDeny=any
IPAddressAllow=127.0.0.0/8

[Install]
WantedBy=multi-user.target
