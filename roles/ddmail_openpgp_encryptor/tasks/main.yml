---
- name: Install packages needed for ddmail openpgp encryptor
  ansible.builtin.apt:
    pkg:
      - python3-pip
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-dev
      - python3-venv
    state: latest

- name: Stat /opt/ddmail_openpgp_encryptor_venv folder
  ansible.builtin.stat:
    path: /opt/ddmail_openpgp_encryptor_venv
  register: ddmail_openpgp_encryptor_venv

- name: Move /opt/ddmail_openpgp_encryptor_venv folder
  ansible.builtin.command: mv /opt/ddmail_openpgp_encryptor_venv /opt/ddmail_openpgp_encryptor_venv_{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
  when: ddmail_openpgp_encryptor_venv.stat.exists

- name: Create ddmail_openpgp_encryptor python env.
  ansible.builtin.command: python3 -m venv /opt/ddmail_openpgp_encryptor_venv

- name: Add the group "{{ ddmail_openpgp_encryptor_runas_group }}"
  ansible.builtin.group:
    name: "{{ ddmail_openpgp_encryptor_runas_group }}"
    state: present
  when: env == "prod"

- name: Add the user "{{ ddmail_openpgp_encryptor_runas_user }}"
  ansible.builtin.user:
    name: "{{ ddmail_openpgp_encryptor_runas_user }}"
    shell: /sbin/nologin
    create_home: false
    group: "{{ ddmail_openpgp_encryptor_runas_group }}"
    groups: "{{ ddmail_openpgp_keyhandler_runas_group }}"
    state: present
  when: env == "prod"

- name: Clone ddmail_openpgp_encryptor repo with separate git directory
  ansible.builtin.git:
    repo: https://github.com/drzobin/ddmail_openpgp_encryptor.git
    dest: /opt/ddmail_openpgp_encryptor_venv/ddmail_openpgp_encryptor

- name: Install requirenments with pip.
  ansible.builtin.pip:
    requirements: /opt/ddmail_openpgp_encryptor_venv/ddmail_openpgp_encryptor/requirements.txt
    state: latest
    virtualenv_python: python3
    virtualenv: /opt/ddmail_openpgp_encryptor_venv

- name: Set user and group ownership of /opt/ddmail_openpgp_encryptor_venv
  ansible.builtin.file:
    state: directory
    recurse: true
    owner: "{{ ddmail_openpgp_encryptor_venv_user_owner }}"
    group: "{{ ddmail_openpgp_encryptor_venv_group_owner }}"
    path: /opt/ddmail_openpgp_encryptor_venv

- name: Set git remote for ddmail_openpgp_encryptor
  ansible.builtin.shell: cd /opt/ddmail_openpgp_encryptor_venv/ddmail_openpgp_encryptor; git remote set-url origin git@github.com:drzobin/ddmail_openpgp_encryptor.git
  become: true
  become_method: su
  become_user: "{{ ddmail_openpgp_encryptor_runas_user }}"
  when: env == "dev"

- name: Create/edit ddmail_openpgp_encryptor config file /opt/ddmail_openpgp_encryptor_venv/openpgp_encryptor/config.ini
  ansible.builtin.template:
    src: config.ini.j2
    dest: /opt/ddmail_openpgp_encryptor_venv/ddmail_openpgp_encryptor/config.ini
    owner: '{{ ddmail_openpgp_encryptor_runas_user }}'
    group: '{{ ddmail_openpgp_encryptor_runas_group }}'
    mode: "u=rw,g=r,o="
  when: env == "prod"

- name: Create/edit ddmail_openpgp_encryptor config file /opt/ddmail_openpgp_encryptor_venv/ddmail_openpgp_encryptor/config.ini
  ansible.builtin.template:
    src: config.ini.j2
    dest: /opt/ddmail_openpgp_encryptor_venv/ddmail_openpgp_encryptor/config.ini
    owner: "{{ ddmail_openpgp_encryptor_venv_user_owner }}"
    group: "{{ ddmail_openpgp_encryptor_venv_group_owner }}"
    mode: "u=rw,g=r,o=r"
  when: env == "dev"

- name: Add logdir for ddmail_openpgp_encryptor.
  ansible.builtin.file:
    path: /var/log/ddmail_openpgp_encryptor.log
    state: touch
    owner: '{{ ddmail_openpgp_encryptor_runas_user }}'
    group: '{{ ddmail_openpgp_encryptor_runas_group }}'
    mode: u=rw,g=r,o=
