[Unit]
Description=Gunicorn instance to serve ddmail_dmcp_keyhandler
After=network.target

[Service]
Environment="MODE=PRODUCTION"
User={{ ddmail_dmcp_keyhandler_gunicorn_user }}
Group={{ ddmail_dmcp_keyhandler_gunicorn_group }}
WorkingDirectory=/opt/ddmail_dmcp_keyhandler_venv/
Environment="PATH=/opt/ddmail_dmcp_keyhandler_venv/bin/"
ExecStart=/opt/ddmail_dmcp_keyhandler_venv/bin/gunicorn -b 127.0.0.1:8002 --log-file /var/log/gunicorn/ddmail_dmcp_keyhandler.log --workers 2 "dmcp_keyhandler:create_app()" 
RuntimeDirectory=ddmail_dmcp_keyhandler

# Prevent acquiring new privileges. Warning: breaks execution of SUID binaries
#NoNewPrivileges=yes

# Use dedicated /tmp
PrivateTmp=yes

# Hide user homes
ProtectHome=yes

# Service may not create SUID/SGID files
#RestrictSUIDSGID=yes

# Service may not create writable and executable memory mappings
MemoryDenyWriteExecute=yes

# Service may only use loopback network interface
#PrivateNetwork=yes

# Create a filesystem jail with namespace
TemporaryFileSystem=/:ro
BindReadOnlyPaths=/opt/ddmail_dmcp_keyhandler_venv /usr/bin/ls /usr/bin/python3.11 /usr/bin/python3 /lib/x86_64-linux-gnu /lib64 /usr/lib/python3.11 /usr/bin/doas
BindPaths=/var/log/gunicorn/ddmail_dmcp_keyhandler.log

# Deny all CAP
CapabilityBoundingSet=
AmbientCapabilities=

# System call filter
SystemCallFilter=@system-service

[Install]
WantedBy=multi-user.target

